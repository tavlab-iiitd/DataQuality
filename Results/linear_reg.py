# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ar11lKp4Kxp1xeIEDqjO6TxDloHsKroR
"""

import numpy as np
from sklearn.linear_model import LinearRegression
import pandas as pd 
from sklearn.metrics import mean_absolute_error

df = pd.read_csv("train.csv")

test = pd.to_numeric(df['DataQuality']

df

df = df.drop(['DatasetName','DataQuality'],axis=1)

train = df
train ['Provenance']= pd.to_numeric(df['Provenance'])

train ['Provenance']= pd.to_numeric(df['Provenance'])
train ['Uniformity']= pd.to_numeric(df['Uniformity'])
train ['DatasetCharacterstics']= pd.to_numeric(df['DatasetCharacterstics'])
train ['MetadataCoupling']= pd.to_numeric(df['MetadataCoupling'])
train ['DuplicateRows']= pd.to_numeric(df['DuplicateRows'])
train ['MissingRows']= pd.to_numeric(df['MissingRows'])
train ['Unskewness']= pd.to_numeric(df['Unskewness'])
train ['CategoricalContinous']= pd.to_numeric(df['CategoricalContinous'])
train ['Uncorrelation']= pd.to_numeric(df['Uncorrelation'])

train

model = LinearRegression()
model.fit(train, test)

r_sq = model.score(train, test)
print('coefficient of determination:', r_sq)

print(model.coef_)

y_pred = model.predict(train)

print("mae : ", mean_absolute_error(test,y_pred))

test_data = pd.read_csv("test.csv")

test_data = test_data.drop(['Name of Dataset'],axis=1)

test_data

y_pred = model.predict(test_data)

df = pd.DataFrame(y_pred)

df.to_csv("results.csv")